.grid
  .panel.panel-default
    p.page-title
      i.fa.fa-download(style="color: #e25440;")
      |  Back up
form(ng-submit = 'ctrl.save(ctrl.formData.scheduleId, ctrl.formData.selectedVms, ctrl.sanitizePath(ctrl.formData.mount, ctrl.formData.path), ctrl.formData.tag, ctrl.formData.depth, ctrl.formData.cronPattern, ctrl.formData.enabled)')
  .grid
    .panel.panel-default
      .panel-heading.panel-title
        i.fa.xo-icon-vm(style='color: #e25440;')
        |  VMs to back up
      .panel-body.form-horizontal
        .text-center(ng-if = '!ctrl.formData'): i.fa.fa-circle-o-notch.fa-spin.fa-2x
        .container-fluid(ng-if = 'ctrl.formData')
          .alert.alert-info(ng-if = '!ctrl.formData.scheduleId') Creating New Back up
          .alert.alert-warning(ng-if = 'ctrl.formData.scheduleId') Modifying Back up ID {{ ctrl.formData.scheduleId }}
          .form-group
            label.control-label.col-md-2(for = 'tag') Tag
            .col-md-10
              input#tag.form-control(ng-model = 'ctrl.formData.tag', placeholder = 'Back-up tag', required)
          .form-group(ng-class = '{"has-warning": !ctrl.formData.selectedVms.length}')
            label.control-label.col-md-2(for = 'vmlist') VMs
            .col-md-8
              ui-select(ng-model = 'ctrl.formData.selectedVms', multiple, close-on-select = 'false', required)
                ui-select-match(placeholder = 'Choose VMs to back-up')
                  i.xo-icon-working(ng-if="isVMWorking($item)")
                  i(class="xo-icon-{{$item.power_state | lowercase}}",ng-if="!isVMWorking($item)")
                  |  {{$item.name_label}}
                  span(ng-if="$item.$container")
                    |  ({{($item.$container | resolve).name_label}})
                ui-select-choices(repeat = 'vm in ctrl.objects | selectHighLevel | filter:{type: "VM"} | filter:$select.search | orderBy:["$container", "name_label"] track by vm.id')
                  div
                    i.xo-icon-working(ng-if="isVMWorking(vm)", tooltip="{{vm.power_state}} and {{(vm.current_operations | map)[0]}}")
                    i(class="xo-icon-{{vm.power_state | lowercase}}",ng-if="!isVMWorking(vm)", tooltip="{{vm.power_state}}")
                    |  {{vm.name_label}}
                    span(ng-if="vm.$container")
                      |  ({{(vm.$container | resolve).name_label || ((vm.$container | resolve).master | resolve).name_label}})
            .col-md-2
              label(tooltip = 'select/deselect all running VMs', style = 'cursor: pointer')
                input.hidden(type = 'checkbox', ng-model = 'ctrl.formData.allRunning', ng-change = 'ctrl.toggleAllRunning(ctrl.formData.allRunning)')
                span.fa-stack
                  i.xo-icon-running.fa-stack-1x
                  i.fa.fa-circle-o.fa-stack-2x(ng-if = 'ctrl.formData.allRunning')
              label(tooltip = 'select/deselect all halted VMs', style = 'cursor: pointer')
                input.hidden(type = 'checkbox', ng-model = 'ctrl.formData.allHalted', ng-change = 'ctrl.toggleAllHalted(ctrl.formData.allHalted)')
                span.fa-stack
                  i.xo-icon-halted.fa-stack-1x
                  i.fa.fa-circle-o.fa-stack-2x(ng-if = 'ctrl.formData.allHalted')
          .form-group
            label.control-label.col-md-2(for = 'depth') Depth
            .col-md-10
              input#depth.form-control(ng-model = 'ctrl.formData.depth', placeholder = 'How many back-ups to rollover', type = 'number', min = '1', required)
          .form-group
            label.control-label.col-md-2(for = 'tag') Path
            .col-md-10
              .input-group
                .input-group-btn(dropdown)
                  button#path-addon.btn.btn-default.disabled(type = 'button', tooltip = 'This base path is configurable on server-side') {{ ctrl.backUpRootPath }}
                  button.btn.btn-default.disabled(type = 'button') /
                  button.btn.btn-default.dropdown-toggle(type = 'button', dropdown-toggle)
                    | {{ ctrl.formData.mount }} &nbsp;
                    span.caret
                  ul.dropdown-menu(role = 'menu')
                    li.dropdown-header Choose a mount point
                    li: a(href = '#', ng-click = 'ctrl.formData.mount = ""'): em (none)
                    li(ng-repeat = 'mount in ctrl.backUpMounts'): a(href = '#', ng-click = 'ctrl.formData.mount = mount.path') {{mount.path}}
                    li.divider(role = 'separator')
                    li: a(ui-sref = 'scheduler.mount')
                      i.fa.fa-pencil
                      | &nbsp; Manage your mount points...
                  button.btn.btn-default.disabled(ng-if = 'ctrl.formData.mount', type = 'button') /
                input#path.form-control(ng-model = 'ctrl.formData.path', placeholder = 'sub-path (optional)', aria-describedby = 'path-addon')
          .form-group
            .col-md-10.col-md-offset-2: .well.well-sm(tooltip = 'You can edit this path just above') {{ ctrl.sanitizePath(ctrl.backUpRootPath, ctrl.formData.mount, ctrl.formData.path) }}
          .form-group(ng-if = '!ctrl.formData.scheduleId')
            label.control-label.col-md-2(for = 'enabled')
              input#enabled(ng-model = 'ctrl.formData.enabled', type = 'checkbox')
            .help-block.col-md-10 Enable immediatly after creation
    .panel.panel-default
      .panel-heading.panel-title
        i.fa.fa-clock-o(style="color: #e25440;")
        |  Schedule
      .panel-body.form-horizontal
        .text-center(ng-if = '!ctrl.formData'): i.fa.fa-circle-o-notch.fa-spin.fa-2x
        xo-scheduler(data = 'ctrl.formData', api = 'ctrl.scheduleApi')
  .grid
    .panel.panel-default
      .panel-body
        p.center
          button.btn.btn-lg.btn-primary(type = 'submit', ng-disabled = '!ctrl.ready')
            i.fa.fa-clock-o
            | &nbsp;
            i.fa.fa-arrow-right
            | &nbsp;
            i.fa.fa-database
            | &nbsp;Save&nbsp;
          | &nbsp;
          button.btn.btn-lg.btn-default(type = 'button', ng-click = 'ctrl.resetData()', ng-disabled = '!ctrl.ready')
            | &nbsp;Reset&nbsp;
.grid
    .panel.panel-default
      .panel-heading.panel-title
        i.fa.fa-list-ul(style="color: #e25440;")
        | Schedules
      .panel-body
        .text-center(ng-if = '!ctrl.schedules'): i.fa.fa-circle-o-notch.fa-2x.fa-spin
        .text-center(ng-if = 'ctrl.schedules && !ctrl.collectionLength(ctrl.schedules)') No scheduled jobs
        table.table.table-hover(ng-if = 'ctrl.schedules && ctrl.collectionLength(ctrl.schedules)')
          tr
            th ID
            th Tag
            th VMs to back-up
            th Path
            th Depth
            th Scheduling
            th Enabled now
            th
          tr(ng-repeat = 'schedule in ctrl.schedules track by schedule.id')
            td {{ schedule.id }}
            td {{ ctrl.jobs[schedule.job].paramsVector.items[0].values[0].tag }}
            td
              div(ng-if = 'ctrl.jobs[schedule.job].paramsVector.items[0].values.length == 1')
                | {{ (ctrl.jobs[schedule.job].paramsVector.items[0].values[0].id | resolve).name_label }}
              div(ng-if = 'ctrl.jobs[schedule.job].paramsVector.items[0].values.length > 1')
                button.btn.btn-info(type = 'button', ng-click = 'unCollapsed = !unCollapsed')
                  | {{ ctrl.jobs[schedule.job].paramsVector.items[0].values.length }} VMs&nbsp;
                  i.fa(ng-class = '{"fa-chevron-down": !unCollapsed, "fa-chevron-up": unCollapsed}')
                div(collapse = '!unCollapsed')
                  br
                  ul
                    li(ng-repeat = 'item in ctrl.jobs[schedule.job].paramsVector.items[0].values')
                      span(ng-if = 'item.id | resolve') {{ (item.id | resolve).name_label }}
                      span(ng-if = '(item.id | resolve).$container') &nbsp;({{ ((item.id | resolve).$container | resolve).name_label }})
            td
              span.text-info {{ ctrl.backUpRootPath }}
              strong /{{ ctrl.jobs[schedule.job].paramsVector.items[0].values[0].path }}
            td {{ ctrl.jobs[schedule.job].paramsVector.items[0].values[0].depth }}
            td {{ ctrl.prettyCron(schedule.cron) }}
            td.text-center
              i.fa.fa-check(ng-if = 'schedule.enabled')
            td.text-right
              button.btn.btn-primary(type = 'button', ng-click = 'ctrl.edit(schedule)'): i.fa.fa-pencil
              | &nbsp;
              button.btn.btn-danger(type = 'button', ng-click = 'ctrl.delete(schedule)'): i.fa.fa-trash-o